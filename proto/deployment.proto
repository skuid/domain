syntax = "proto3";

package protobuf;

option go_package = "github.com/skuid/domain/pkg/pb";

import "metadata.proto";
// import "google.api.http";

service Marina {
  rpc RetrievePlan(RetrievePlanRequest) returns (stream RetrievePlanResponse) {
    // TODO: adding this allows for restful endpoints so we can use this to
    // replace existing json stuff
    // option (google.api.http) = {
    // post : "/v1/retrieve/plan"
    // };
  }

  rpc Retrieve(RetrievalRequest) returns (stream RetrievalResponse) {
    // TODO: adding this allows for restful endpoints so we can use this to
    // replace existing json stuff
    // option (google.api.http) = {
    // post : "/v1/retrieve"
    // };
  }

  rpc ExampleStream(stream ExampleRequest) returns (stream ExampleResponse) {}
  rpc Example(ExampleRequest) returns (ExampleResponse) {}

  // rpc Deployment(stream DeploymentRequest) returns (stream
  // DeploymentResponse) {
  // }
}

message RetrievalRequest {}

message RetrievalResponse {}

// we get a request from tides that's going to
// fire off a series of requests to ${host}/v2/metadata/retrieve/plan
// to get the plan for this work.
// POST: ${host}/v2/metadata/retrieve/plan
// headers: content-type: application/json
//					authorization: bearer ${access-token}
//					x-skuid-public-key-endpoint:
//${host}/api/v1/site/verificationkey
message RetrievePlanRequest {
  string Host = 1;
  string AccessToken = 2; //@gotags json:"-"
  RetrievePlanFilter Filter = 3;
}

message RetrievePlanFilter {
  string AppName = 1;            //@gotags: json:"appName"
  repeated string PageNames = 2; //@gotags: json:"pageNames"
}

message RetrievePlanResponse {
  RetrievalPlan RetrievalPlan = 1; //@gotags: json:"plan"
}

message ExampleRequest { int32 num = 1; }

message ExampleResponse { int32 result = 1; }

// message DeploymentRequest {}

// message DeploymentResponse {}